<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.flowingsun.behavior.dao.CommentLikeMapper" >
  <resultMap id="BaseResultMap" type="com.flowingsun.behavior.entity.CommentLike" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="articleId" property="articleid" jdbcType="INTEGER" />
    <result column="mainUserId" property="mainuserid" jdbcType="BIGINT" />
    <result column="commentId" property="commentid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="BIGINT" />
    <result column="likeDate" property="likedate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, articleId, mainUserId, commentId, userId, likeDate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from comment_like
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectLikeCountByCommentLikeBean" resultType="INTEGER" parameterType="com.flowingsun.behavior.entity.CommentLike" >
    SELECT COUNT(0) FROM comment_like WHERE commentId = #{commentid,jdbcType=INTEGER} AND userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from comment_like
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCommentId" parameterType="java.lang.Integer" >
    DELETE FROM comment_like
    WHERE commentId = #{commentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.flowingsun.behavior.entity.CommentLike" >
    insert into comment_like (id, articleId, mainUserId, 
      commentId, userId, likeDate
      )
    values (#{id,jdbcType=INTEGER}, #{articleid,jdbcType=INTEGER}, #{mainuserid,jdbcType=BIGINT}, 
      #{commentid,jdbcType=INTEGER}, #{userid,jdbcType=BIGINT}, #{likedate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.flowingsun.behavior.entity.CommentLike" >
    insert into comment_like
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleid != null" >
        articleId,
      </if>
      <if test="mainuserid != null" >
        mainUserId,
      </if>
      <if test="commentid != null" >
        commentId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="likedate != null" >
        likeDate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleid != null" >
        #{articleid,jdbcType=INTEGER},
      </if>
      <if test="mainuserid != null" >
        #{mainuserid,jdbcType=BIGINT},
      </if>
      <if test="commentid != null" >
        #{commentid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="likedate != null" >
        #{likedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.flowingsun.behavior.entity.CommentLike" >
    update comment_like
    <set >
      <if test="articleid != null" >
        articleId = #{articleid,jdbcType=INTEGER},
      </if>
      <if test="mainuserid != null" >
        mainUserId = #{mainuserid,jdbcType=BIGINT},
      </if>
      <if test="commentid != null" >
        commentId = #{commentid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="likedate != null" >
        likeDate = #{likedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flowingsun.behavior.entity.CommentLike" >
    update comment_like
    set articleId = #{articleid,jdbcType=INTEGER},
      mainUserId = #{mainuserid,jdbcType=BIGINT},
      commentId = #{commentid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=BIGINT},
      likeDate = #{likedate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>